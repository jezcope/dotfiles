* Evil mode configuration

** Basic setup

#+BEGIN_SRC emacs-lisp
  (setq-default evil-shift-width 2
                evil-shift-round t)

  (setq evil-cross-lines t)
#+END_SRC

*** Save on leaving insert state

#+BEGIN_SRC emacs-lisp
  (defun jc/save-current ()
    (interactive)
    (if (jc/buffer-visiting-real-file-p)
      (save-buffer)))

  (add-hook 'evil-insert-state-exit-hook #'jc/save-current)
#+END_SRC

** Leader

#+BEGIN_SRC emacs-lisp
  (setq evil-leader/leader "<SPC>")

  (evil-leader/set-key
    "b" 'jc/blogging-hydra/body
    "c" 'org-capture
    "a" 'org-agenda
    "l" 'jc/launcher-hydra/body
    "f" 'jc/file-hydra/body
    "t" 'jc/toggle-hydra/body
    "i" 'helm-semantic-or-imenu
    "I" 'helm-imenu-in-all-buffers
    )

  (global-evil-leader-mode 1)
#+END_SRC

** Nerd commenter

#+BEGIN_SRC emacs-lisp
  (evil-leader/set-key
    "/i" 'evilnc-comment-or-uncomment-lines
    "/l" 'evilnc-quick-comment-or-uncomment-to-the-line
    "/y" 'evilnc-copy-and-comment-lines
    "/p" 'evilnc-comment-or-uncomment-paragraphs
    "/r" 'comment-or-uncomment-region
    "/v" 'evilnc-toggle-invert-comment-line-by-line)
#+END_SRC

** Mode-specific stuff

*** Mu4e

#+BEGIN_SRC emacs-lisp
  (evil-define-key 'normal message-mode-map "^" 'message-beginning-of-line)
#+END_SRC

*** Org

**** Switch to insert state after certain commands

#+BEGIN_SRC emacs-lisp
  (with-eval-after-load 'org
    (dolist (hook '(org-capture-mode-hook
                    org-insert-heading-hook
                    ))
      (add-hook hook 'evil-insert-state)))
#+END_SRC

*** Magit

**** Switch to insert state after certain commands

#+BEGIN_SRC emacs-lisp
  (with-eval-after-load 'git-commit
    (add-hook 'git-commit-mode-hook 'evil-insert-state))
#+END_SRC
